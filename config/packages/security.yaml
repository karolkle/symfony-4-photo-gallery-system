security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: auto

    providers:
      #  in_memory: { memory: null }
        user:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
         #   pattern: ^/
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\TokenAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            form_login:
     #           check_path: app_login
      #          login_path: app_login
                csrf_token_generator: security.csrf.token_manager
                csrf_token_id: a_private_string

            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login,     roles: IS_AUTHENTICATED_ANONYMOUSLY }
     #   - { path: ^/u, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
       #  - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       #  - { path: ^/admin, roles: ROLE_ADMIN }
    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: ROLE_ADMIN
